---
breadcrumb: PCF Metrics Documentation
title: Monitor Configuration
owner: PCF Metrics
---
This topic describes how to configure event and metric monitors for your applications using PCF Metrics' Beta `monitors-api` endpoint. 

##<a id='view-monitors'></a> View Monitors
### cURL 
<pre>
curl -H "Authorization: $(cf oauth-token)" -vvv -G "https://monitors-api.sys.[DOMAIN]/api/v1/$(cf app [APP_NAME] --guid)/monitors/" | jq
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_NAME]` with the name of your app  

### API
<pre>
GET https://monitors-api.sys.[DOMAIN]/api/v1/[APP_GUID]/monitors/
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_GUID]` with the GUID of your app  

##<a id='delete-monitors'></a> Delete Monitors
### cURL
<pre>
curl -H "Authorization: $(cf oauth-token)" -vvv -G "https://monitors-api.sys.[DOMAIN]/api/v1/$(cf app [APP_NAME] --guid)/monitors/[MONITOR_GUID]" -X DELETE
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_NAME]` with the name of your app

* Replace `[MONITOR_GUID]` with the GUID of your app  

### API 
<pre>
DELETE https://monitors-api.sys.[DOMAIN]/api/v1/[APP_GUID]/monitors/[MONITOR_GUID]
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_GUID]` with the GUID of your app

* Replace `[MONITOR_GUID]` with the GUID of your app

##<a id='create-monitors'></a> Create Monitors
### cURL
<pre>
curl -H "Authorization: $(cf oauth-token)" "https://monitors-api.sys.[DOMAIN]/api/v1/$(cf app [APP_NAME] --guid)/monitors" -d '{ "metric_name": "cf.system.latency","metric_type": "gauge","metric_unit": "milliseconds","name": "monitor_name","snooze_time_in_minutes": 1,"threshold_comparator": "<=","critical_threshold": 100.0,"warning_threshold": 70.0,"critical_webhook_url": "critical_webhook_url","critical_json_payload": "critical_json_payload","warning_webhook_url": "warning_webhook_url","warning_json_payload": "warning_json_payload" }'
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_NAME]` with the name of your app

### API
<pre>
POST https://monitors-api.sys.[DOMAIN]/api/v1/[APP_GUID]/monitors/
</pre>
    
* Replace `[DOMAIN]` with your domain

* Replace `[APP_GUID]` with the GUID of your app

BODY:
<pre>
{
    "name": "Lathrop CPU",
    "metric_name": "cf.system.cpu",
    "metric_type": "gauge",
    "metric_unit": "percentage",
    "snooze_time_in_minutes": 15,
    "threshold_comparator": ">=",
    "critical_threshold": 10,
    "warning_threshold": 5,
    "critical_webhook_url": "",
    "critical_json_payload": "",
    "warning_webhook_url": "",
    "warning_json_payload": ""
}
</pre>

##<a id='view-triggered-monitors'></a> View Triggered Monitors

PCF Metrics 1.6 also provides the ability to retrieve triggered application event and metric monitors via endpoint.

### cURL 
<pre>
curl -H "Authorization: $(cf oauth-token)" -vvv -G "https://monitors-api.sys.[DOMAIN]/api/v1/$(cf app [APP_NAME] --guid)/triggered_monitors/" | jq
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_NAME]` with the name of your app

### API 
<pre>
GET https://monitors-api.sys.[DOMAIN]/api/v1/[APP_GUID]/triggered_monitors/
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_GUID]` with the GUID of your app

##<a id='configure-monitors-yml'></a> Configure Monitors via YAML

In addition to configuring Monitors directly via API, PCF Metrics 1.6 also allows you to automate your Monitors configuration via YAML file.

### Metric monitor .yml example format
<pre>
---
- metric_name: cf.system.latency
  metric_type: gauge
  metric_unit: milliseconds
  name: Latency
  snooze_time_in_minutes: 1
  threshold_comparator: ">="
  critical_threshold: 60
  warning_threshold: 50
  critical_webhook_url: critical_webhook_url
  critical_json_payload: critical_json_payload
  warning_webhook_url: warning_webhook_url
  warning_json_payload: warning_json_payload
</pre>
    
### Event monitor .yml example format
<pre>
---
- metric_name: cf.system.events.start
  metric_type: event
  metric_unit: per minute
  name: App Start
  snooze_time_in_minutes: 1
  threshold_comparator: ">="
  critical_threshold: 1
  warning_threshold: 0
  critical_webhook_url: critical_webhook_url
  critical_json_payload: critical_json_payload
  warning_webhook_url: warning_webhook_url
  warning_json_payload: warning_json_payload
</pre>

### Multiple monitor .yml example format
<pre>
---
- metric_name: cf.system.latency
  metric_type: gauge
  metric_unit: milliseconds
  name: Latency
  snooze_time_in_minutes: 1
  threshold_comparator: ">="
  critical_threshold: 60
  warning_threshold: 50
- metric_name: cf.system.cpu
  metric_type: gauge
  metric_unit: percentage
  name: CPU
  snooze_time_in_minutes: 1
  threshold_comparator: ">="
  critical_threshold: 60
  warning_threshold: 50
- metric_name: cf.system.events.start
  metric_type: event
  metric_unit: per minute
  name: App Start
  snooze_time_in_minutes: 1
  threshold_comparator: ">="
  critical_threshold: 1
  warning_threshold: 0
- metric_name: cf.system.memory
  metric_type: gauge
  metric_unit: percentage
  name: Lathrop Memory
  snooze_time_in_minutes: 5
  threshold_comparator: ">="
  critical_threshold: 10
  warning_threshold: 5
</pre>

### Apply .yml cURL Command
<pre>
curl -H "Authorization: $(cf oauth-token)" -H "Content-Type: application/yaml" --data-binary "@/[PATH-TO-FILE.yml]" -k "https://monitors-api.sys.[DOMAIN]/api/v1/$(cf app [APP_NAME] --guid)/monitors/" -vvv -X PUT
</pre>

* Replace `[DOMAIN]` with your domain

* Replace `[APP_NAME]` with the name of your app

##<a id='notes'></a> Notes
You must have the appropriate permissions to view or manage application Monitors in PCF Metrics.

The following are attributes are optional and can be omitted from your commands if not needed:

* `warning_threshold`

* `critical_webhook_url`

* `critical_json_payload`

* `warning_webhook_url`

* `warning_json_payload`
