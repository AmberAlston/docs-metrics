---
title: Troubleshooting PCF Metrics
owner: PCF Metrics
---

This topic describes how to resolve common issues experienced while operating or using Pivotal Cloud Foundry (PCF) Metrics.

##<a id='smoke-test'></a> Smoke Test Errors

PCF Metrics runs a set of smoke tests during installation to confirm system health. If the smoke tests discover any errors, you can find a summary of those errors at the end of the errand log output, including detailed logs about where the failure occurred. 

The following tables describe common failures and how to resolve them.

<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Insufficient Resources</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>Your PCF deployment has insufficient Diego resources to handle the apps pushed as part of a PCF Metrics installation. 
  <br><br>
  The PCF Metrics tile deploys the following apps:
  <table>
    <tr>
      <th>App</th>
      <th>Memory</th>
      <th>Disk</th>
    </tr>
    <tr>
      <td><code>metrics-ingestor</code><sup>*</sup></td>
      <td>512MB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>mysql-logqueue</code><sup>*</sup></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>elasticsearch-logqueue</code><sup>*</sup></td>
      <td>512MB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>metrics-aggregator</code></td>
      <td>256MB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>metrics</code></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>worker-app-dev</code></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>worker-app-logs</code></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>worker-health-check</code></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
    <tr>
      <td><code>worker-reaper</code></td>
      <td>1GB</td>
      <td>1GB</td>
    </tr>
  </table>
  
   <sup>*</sup>You may have more than one instance of each of the Ingestor and Loqueue apps depending your <a href="./sizing.html">sizing</a> needs. You configure these instance counts as part of the <a href="./installing.html#data">Data Store</a> pane of the tile.</p></td></td>
</tr>
<tr>
  <th>Solution</th>
  <td>Increase the number of Diego cells so that your PCF deployment can support the apps pushed as part of the PCF Metrics installation:
  <br>
  <br>
  <ol>
  <li>Navigate to the <b>Resource Config</b> section of the Elastic Runtime tile.</li>
  <li>In the <b>Diego Cell</b> row, add another <b>Instance</b>.</li> 
  </ol>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Failed querying mysql</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>The tile deployed without the necessary errands selected to keep the internal database schema in sync with apps.</td>
</tr>
<tr>
  <th>Solution</th>
  <td>Re-deploy the tile with the following errands selected: 
  <ul>
    <li>
      <b>Database migrations for PCF Metrics</b>
    </li>
    <li>
      <b>Push PCF Metrics Data components</b>
    </li>
    <li>
      <b>Push PCF Metrics UI component</b>
    </li>
  </ul>
  </td>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Received no results back from mysql - failing</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>The Ingestor is not functioning properly.</td>
</tr>
<tr>
  <th>Solution</th>
  <td>
  <ol>
  <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>Run <code>cf apps</code> to see if these apps are running:
      <ul>
        <li><code>metrics-ingestor</code></li>
        <li><code>mysql-logqueue</code></li>
      </ul>
    </li>
    <li>
      If the apps are not running, run the following commands to start them:
    </li>
       <pre class="terminal">$ cf start metrics-ingestor<br>$ cf start mysql-logqueue</pre>
    <li>
      Run the following commands and search the app logs for <code>ERROR</code> messages containing additional information:
    </li>
     <pre class="terminal">$ cf logs metrics-ingestor --recent<br>$ cf logs mysql-logqueue --recent</pre>
     <p class="note"><strong>Note</strong>: In some cases, the apps cannot communicate due to TLS certificate verification failure. If your deployment uses self-signed certs, ensure the <b>Disable SSL certificate verification for this environment</b> box is checked in the Elastic Runtime <b>Networking</b> pane.</p>
  </ol>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Failed to connect to mysql</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>MySQL is not running properly.</td>
</tr>
<tr>
  <th>Solution</th>
  <td>
  <ol>
    <li>
    Check the logs of the MySQL Server and MySQL Proxy jobs for errors.  
      <ul><li>You can download the logs from the PCF Metrics tile under the <b>Status</b> tab.</li></ul>
    </li>
    <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>
    Run the following command and ensure the security group can access the MySQL jobs:
    <p class="note"><strong>Note</strong>: PCF Metrics creates a default security group to allow all traffic to its apps.</p>
    </li>
    <pre class="terminal">$ cf security-group metrics-api</pre>
  </ol></td>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Failed to start elasticsearch client</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>Elasticsearch is not running correctly.</td>
</tr>
<tr>
  <th>Solution</th>
  <td>
  <ol>
    <li>
    Check the logs of the Elasticsearch Master, Elasticsearch Coordinator and Elasticsearch Data jobs for errors.  
      <ul><li>You can download the logs from the PCF Metrics tile under the <b>Status</b> tab.</li></ul>
    </li>
    <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>
    Run the following command and ensure the security group can access the Elasticsearch jobs:
    <p class="note"><strong>Note</strong>: PCF Metrics creates a default security group to allow all traffic to its apps.</p>
    </li>
    <pre class="terminal">$ cf security-group metrics-api</pre>
  </ol></td>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td><code>Never received app logs - something in the firehose -> elasticsearch flow is broken</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>Ingestor is not inserting logs correctly.</td>
</tr>
<tr>
  <th>Solution</th>
  <td>
  <ol>
  <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>Run <code>cf apps</code> to see if these apps are running:
      <ul>
        <li><code>metrics-ingestor</code></li>
        <li><code>elasticsearch-logqueue</code></li>
      </ul>
    </li>
    <li>
      If the apps are not running, run the following commands to start them:
    </li>
      <pre class="terminal">$ cf start metrics-ingestor<br>$ cf start elasticsearch-logqueue</pre>
    <li>
      Run the following commands and search the app logs for <code>ERROR</code> messages containing additional information:
    </li>
     <pre class="terminal">$ cf logs metrics-ingestor --recent<br>$ cf logs elasticsearch-logqueue --recent</pre>
     <p class="note"><strong>Note</strong>: In some cases, you may discover a failure to communicate with Loggregator in the form of a bad handshake error. <br><br>Ensure the <b>Loggregator Port</b> setting in the Elastic Runtime tile <b>Networking</b> pane is set to the correct value. For AWS, it is <code>4443</code>. For all other IaaSes, it is <code>443</code>.
      </p></td>
  </ol>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td>
      <code>Network metrics are not available.</code><br>
      <code>Container metrics are not available.</code><br>
      <code>App events are not available.</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>PCF Metrics is misconfigured and the frontend API does not receive logs from MySQL.</td>
</tr>
<tr>
  <th>Solution</th>
  <td> 
  <ol>
  <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>
      Run the following command to check the app logs and investigate the error:
    </li>
     <pre class="terminal">$ cf logs metrics --recent</pre>
  </ol>
  </td>
</tr>
</table>
<br>
<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td>
    <code>Logs are not available.</code><br>
    <code>Histograms are not available.</code>
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>PCF Metrics is misconfigured and the frontend API does not receive logs from Elasticsearch.</td>
</tr>
<tr>
  <th>Solution</th>
  <td> 
  <ol>
  <li>From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>
      Run the following command to check the app logs and investigate the error:
    </li>
     <pre class="terminal">$ cf logs metrics --recent</pre>
  </ol>
  </td>
</tr>
</table>

##<a id='log'></a> Log Errors

<table border='1' class='nice'>
<tr>
  <th width="22%">Error</th>
  <td>
    The PCF Metrics UI does not show any new logs from Elasticsearch. 
  </td>
</tr>
<tr>
  <th>Cause</th>
  <td>The tile deployed with the <code>Push PCF Metrics Data Components</code> errand deselected</td>
</tr>
<tr>
  <th>Solution</th>
  <td>
  Restart the Elasticsearch Logqueue using the <a href="http://docs.pivotal.io/pivotalcf/cf-cli/index.html">cf CLI</a> as follows:
  <ol>
    <li>Target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
    <li>Run the following command to restart the Logqueue application:</li>
    <pre class="terminal">$ cf restart elasticsearch-logqueue</pre>
  </ol>
    <p class="note"><strong>Note</strong>: To avoid having to apply this fix in the future, select the checkbox to enable the <code>Push PCF Metrics Data Components</code> <a href="./installing.html#errands">errand</a> before your next tile update. </p>
  </td>
</tr>
</table>

##<a id='ui'></a> No Logs or Metrics in the UI

In some cases, you may not see any metrics and logs in the UI after successfully deploying the PCF Metrics tile.

Follow the steps in this section to help locate the app or component causing the problem. 

### <a name="check-lb"></a> Step 1: Check your Load Balancer Configuration

If you use a load balancer, the event-stream mechanism used by the Metrics UI might be blocked. Refer to the table below to resolve this error. 

If you do not use a load balancer, or this issue does not apply to you proceed to [Step 2: Check the PCF Metrics Apps](#check-apps).

<table>
  <tr>
    <th>Error</th>
    <td>In the case of a customer using a F5 load balancer, metrics and logs were not visible in the UI despite successful ingestion and no UI errors reported.</td>
  </tr>
  <tr>
    <th>Cause</th>
    <td>The root of the issue was the traffic of type text/event-stream was blocked by the F5 load balancer.</td>
  </tr>
  <tr>
    <th>Solution</th>
    <td>When F5 was configured to allow event-stream traffic, the issue was resolved.
</td>
  </tr>
</table>
  
### <a name="check-apps"></a> Step 2: Check the PCF Metrics Apps

1. Target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:
  <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>

1. Ensure that the output displays the following apps, each in a `started` state:
  * `metrics-ingestor`
  * `mysql-logqueue`
  * `elasticsearch-logqueue`
  * `metrics-aggregator`
  * `metrics`
  * `worker-app-dev`
  * `worker-app-logs`
  * `worker-health-check`
  * `worker-reaper`

1. Check the logs of each app for errors using the following command:
  <pre class="terminal">$ cf logs APP-NAME --recent</pre>

1. If the `cf logs` command does not return any output, or if you did not find any errors, proceed to [Step 3: Check El the Elasticsearch Cluster](#check-es-cluster).

### <a name="check-es-cluster"></a>Check the Elasticsearch Cluster

1. From Ops Manager, select the PCF Metrics tile. 

1. 
1. Use `bosh ssh` to acess any elasticsearch VM. See the [Advanced Troubleshooting with the BOSH CLI](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#prepare) topic for instructions.


1. Run the following command to list all the Elasticsearch indices:
  <pre class="terminal">$ curl localhost:9200/_cat/indices?v | sort </pre>
  * The last row of the output corresponds to the most recent index.
  * The sixth column displays the number of documents for the index.


1. Examine the most recent index to see if the number of stored documents periodically increases.
  1. If you do not see the number of documents increasing, note the statuses of the all the indices, located in the first column, and follow the table below:
  <table>
    <tr>
      <th>Status</th>
      <th>Action</th>
    </tr>
    <tr>
      <td>Any status except for `green`</td>
      <td>
        There may be a problem with the Elasticsearch cluster. 
        <br>
        <ol>
          <li>Restart the Elasticsearch Logqueue using the <a href="http://docs.pivotal.io/pivotalcf/cf-cli/index.html">cf CLI</a> as follows:</li>
            <ol type="a">
              <li>Target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
              <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
              <li>Run the following command to restart the Logqueue application:</li>
              <pre class="terminal">$ cf restart elasticsearch-logqueue</pre>
            </ol>
          <li>Check the status of the indices periodically to see if they recover to `green` status.</li>
        </ol>
      </td>
    </tr>
    <tr>
      <td>All indices are `green`</td>
      <td>
        See the Elasticsearch Logqueue and Metrics Ingestor sections below. There is likely a problem further up in ingestion.
      </td>
    </tr>
  </table>



1. If the curl returns a success response, ES may not even be running correctly
  * Inspect `/var/vcap/sys/logs/elasticsearch/elasticsearch.stdout.log` and `/var/vcap/sys/logs/elasticsearch/elasticsearch.stderr.log` to see if you can spot any failures or errors.

### Elasticsearch Logqueue

1. From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
1. Run <code>cf apps</code> to see if the <code>elasticsearch-logqueue</code> app instances are `started`.

1. If any instance of the app is `stopped`, run the following command to increase logging:
  <pre class="terminal">$ cf set-env elasticsearch-logqueue LOG_LEVEL DEBUG</pre>

1. In one terminal window, run the following command:
  <pre class="terminal">$ cf logs elasticsearch-logqueue</pre>
  In a different terminal window, run the following command:
  <pre class="terminal">$ $ cf restage elasticsearch-logqueue</pre>
  1. Watch the logs emitted by the `elasticsearch-logqueue` app for errors. 
      * A common error would be connecting to Elasticsearch.

### Metrics Ingestor

1. From the cf CLI, target the <code>system</code> org and <code>metrics-v1-2</code> space of your PCF deployment:</li>
    <pre class="terminal">$ cf target -o system -s metrics-v1-2</pre>
1. Run <code>cf apps</code> to see if the `metrics-ingestor` app instances are `started`. 
1. If any of the app instances are `stopped`, run the following command to increase logging:
  <pre class="terminal">$ cf set-env elasticsearch-logqueue LOG_LEVEL DEBUG</pre>

1. In one terminal window, run the following command:
  <pre class="terminal">$ cf logs metrics-ingestor</pre>
  In a different terminal window, run the following command:
  <pre class="terminal">$ $ cf restage metrics-ingestor</pre>
  1. Watch the logs emitted by the `metrics-ingestor` app for errors. 
      * a common error would be connecting to the firehose
      * another common error is connecting to either of the logqueues

### Metrics (MySQL)

1. Use `bosh ssh` to access one of the PCF Metrics MySQL server VMs. See the [Advanced Troubleshooting with the BOSH CLI](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#prepare) topic for instructions.

1. Log in by running `mysql -u USERNAME -p PASSWORD` 
  <p class="note"><strong>Note</strong>: If you do not know the username and password, you run `cf env mysql-logqueue` with the <code>system</code> org and the <code>metrics-v1-2</code> space targeted.</p>

1. Verify that the database was bootstrapped correctly:
  1. Run `show databases` and check for a `metrics` database.
      1. if there is no `metrics` database, the `migrate_db` errand of the bosh release may not have run or succeeded. Run it again and note any failures.
  1. Enter the following query several times to verify that the number does not decrease over time:
  <pre class="terminal">mysql> select count(*) from metrics.app\_metric\_rollup where timestamp > ((UNIX\_TIMESTAMP() - 60) * POW(10, 3));</pre>
  This command verifies that the metrics flow in at a constant rate over the last minute.
      1. If the command returns `0` or a consistently decreasing value, the problem is likely further up in ingestion. 
